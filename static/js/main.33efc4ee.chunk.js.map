{"version":3,"sources":["store/actions/types.ts","store/index.ts","services/api/api.ts","services/api/index.ts","store/selectors.ts","components/files/styles.ts","components/tooltip/index.tsx","components/files/index.tsx","pages/main/styles.ts","components/preview-content/index.tsx","pages/main/index.tsx","styles.ts","components/file-content/styles.ts","components/file-content/index.tsx","store/actions/change-file.ts","pages/file/index.tsx","App.tsx","store/actions/get-files.ts","index.tsx"],"names":["actionTypes","baseUrl","initialState","dirs","loaded","loading","store","createStore","state","action","type","GET_FILES","GET_FILES_SUCCESS","payload","files","GET_FILES_FAIL","CHANGE_FILE","newState","children","composeWithDevTools","applyMiddleware","thunk","apiFiles","config","getFiles","a","fetch","response","json","data","Error","getFilesSelector","getAllFilesSelector","getFileContentById","id","find","file","ListFiles","styled","ul","List","ListItem","li","StyledLink","Link","ListItemContent","div","TooltipInfo","title","size","extention","Files","setCurrentContent","useSelector","Typography","variant","component","gutterBottom","map","dir","index","Tooltip","subDir","subIndex","extension","onClick","to","Button","Wrapper","PreviewContent","currentContent","fileInfo","content","MainPage","useState","GlobalStyle","createGlobalStyle","form","Row","useStyles","makeStyles","input","display","marginBottom","cancel","textDecoration","FileContent","allFiles","useForm","control","handleSubmit","errors","dispatch","useDispatch","history","useHistory","classes","onSubmit","values","newFiles","push","error","helperText","rules","required","defaultValue","as","TextField","className","label","name","multiline","color","FilePage","params","useParams","App","useEffect","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33efc4ee.chunk.js","sourcesContent":["import { Dirs, File } from './../../services/api/types'\n\nexport enum actionTypes {\n  GET_FILES = \"GET_FILES\",\n  GET_FILES_SUCCESS = \"GET_FILES_SUCCESS\",\n  GET_FILES_FAIL = \"GET_FILES_FAIL\",\n\n  CHANGE_FILE = \"CHANGE_FILE\"\n}\n\nexport interface getFilesAction {\n  type: actionTypes.GET_FILES\n}\n\nexport interface getFilesSuccessAction {\n  type: actionTypes.GET_FILES_SUCCESS,\n  payload: {\n    files: Dirs\n  }\n}\n\nexport interface getFilesFailAction {\n  type: actionTypes.GET_FILES_FAIL\n}\n\nexport interface changeFilesAction {\n  type: actionTypes.CHANGE_FILE,\n  payload: {\n    files: File[]\n  }\n}\n\nexport type FilesActionTypes = getFilesAction | getFilesSuccessAction | getFilesFailAction | changeFilesAction\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport { actionTypes, FilesActionTypes } from './actions/types'\nimport { RootState } from \"./types\"\n\nconst initialState: RootState = {\n  dirs: {\n    loaded: false,\n    loading: false,\n    dirs: []\n  }\n}\n\nconst reducer = (state: RootState = initialState, action: FilesActionTypes) => {\n  switch (action.type) {\n    case actionTypes.GET_FILES:\n      return {\n        ...state,\n        dirs: {\n          ...state.dirs,\n          loading: true,\n        }\n      }\n\n    case actionTypes.GET_FILES_SUCCESS: \n      return {\n        ...state,\n        dirs: {\n          loaded: true,\n          loading: false,\n          dirs: action.payload.files\n        }\n      }\n\n    case actionTypes.GET_FILES_FAIL:\n      return {\n        ...state,\n        dirs: {\n          loaded: true,\n          loading: false,\n          dirs: []\n        }\n      }\n\n    case actionTypes.CHANGE_FILE:\n      const newState = { ...state }\n      newState.dirs.dirs[0].children[0].children = action.payload.files\n\n      return newState\n\n    default:\n      return state\n  }\n}\n\nexport const store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)))\n","import { DirsResponse } from \"./types\"\n\nexport const getApiFiles = (baseUrl: string) => {\n  return {\n    getFiles: async () => {\n      try {\n        const response = await fetch(`${baseUrl}?mocky-delay=1000ms`)\n        const data: DirsResponse = await response.json()\n\n        return data.dirs\n      } catch (error) {\n        return new Error(error)\n      }\n    }\n  }\n}\n","import { getApiFiles } from \"./api\"\nimport config from \"../../config.json\"\n\nexport const apiFiles = getApiFiles(config.baseUrl)\n","import { File } from './../services/api/types'\nimport { RootState } from './types'\n\nexport const getFilesSelector = (state: RootState) => state.dirs\n\nexport const getAllFilesSelector = (state: RootState): File[] | undefined | null => {\n  return state.dirs?.dirs[0]?.children[0]?.children\n}\n\nexport const getFileContentById = (id: string) => (state: RootState): File | undefined | null => {\n  const files = getAllFilesSelector(state)\n  return files ? files.find(file => file.id === id) : null\n}\n","import { Link } from 'react-router-dom'\nimport styled from \"styled-components\"\n\nexport const ListFiles = styled.ul`\n  width: 400px;\n`\n\nexport const List = styled.ul`\n  margin-top: 10px;\n`\n\nexport const ListItem = styled.li`\n  margin-bottom: 30px;\n  position: relative;\n`\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  position: absolute;\n  right: 50%;\n  top: 50%;\n  transform: translateY(-50%);\n`\n\nexport const ListItemContent = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`\n","import React, { FC } from \"react\"\n\ntype Props = {\n  title: string,\n  size: string,\n  extention?: string\n}\n\nexport const TooltipInfo: FC<Props> = ({ title, size, extention }) => (\n  <div>\n    <p>title: {title}</p>\n    <p>size: {size}</p>\n    {extention && <p>extention: {extention}</p>}\n  </div>\n)\n","import React, { FC } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport FolderIcon from '@material-ui/icons/Folder'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Typography from '@material-ui/core/Typography'\n\nimport { getFilesSelector } from \"../../store/selectors\"\nimport { ListFiles, List, ListItem, ListItemContent, StyledLink } from \"./styles\"\nimport { TooltipInfo } from \"../tooltip\"\nimport { Button } from \"@material-ui/core\"\n\ntype Props = {\n  setCurrentContent: (currentContentId: string) => void\n}\n\nexport const Files: FC<Props> = ({ setCurrentContent }) => {\n  const { loading, dirs } = useSelector(getFilesSelector)\n\n  const handleChangeCurrentContentId = (id: string) => {\n    setCurrentContent(id)\n  }\n\n  return (\n    <div>\n    <Typography variant=\"h2\" component=\"h2\" gutterBottom>Files</Typography>\n    <ListFiles>\n       {loading && <p>Loading...</p>}\n       {dirs && dirs.map((dir, index) => {\n         return (\n            <ListItem key={index}>\n              <Tooltip title={<TooltipInfo size={dir.size} title={dir.title} />}>\n                <ListItemContent>\n                {dir.children ? <FolderIcon /> : <DescriptionIcon />}\n                {dir.title}\n                </ListItemContent>\n              </Tooltip>\n              {dir.children && dir.children.map((subDir, subIndex) => {\n                return (\n                  <List key={subIndex}>\n                    <ListItem>\n                      <Tooltip title={<TooltipInfo size={subDir.size} title={subDir.title} />}>\n                        <ListItemContent>\n                        {subDir.children ? <FolderIcon /> : <DescriptionIcon />}\n                        {subDir.title}\n                        </ListItemContent>\n                      </Tooltip>\n                      {subDir.children && \n                        (<List>\n                          {subDir.children.map((file) => {\n                            return (\n                              <ListItem key={file.id}>\n                                <Tooltip title={<TooltipInfo extention={file.extension} size={file.size} title={file.title} />}>\n                               \n                                  <ListItemContent onClick={() => handleChangeCurrentContentId(file.id)}>\n                                  <DescriptionIcon />\n                                  {file.title}\n                                  </ListItemContent>\n                                </Tooltip>\n                                <StyledLink to={`/${file.id}`}>\n                                  <Button variant=\"contained\">edit</Button>\n                                </StyledLink>\n                              </ListItem>\n                            )\n                          })}\n                        </List>)\n                      }\n                    </ListItem>\n                  </List >\n                )\n              })}\n            </ListItem>\n         )\n       })}\n    </ListFiles>\n    </div>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n`\n","import React, { FC } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport Typography from '@material-ui/core/Typography'\n\nimport { getFileContentById } from \"../../store/selectors\"\n\ntype Props = {\n  currentContent: string\n}\n\nexport const PreviewContent: FC<Props> = ({ currentContent }) => {\n  const fileInfo = useSelector(getFileContentById(currentContent))\n\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom>Preview</Typography>\n      <Typography variant=\"body1\" gutterBottom>{fileInfo?.content}</Typography>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Files } from \"../../components/files\"\nimport { Wrapper } from \"./styles\"\nimport { PreviewContent } from '../../components/preview-content'\n\nexport const MainPage = () => {\n  const [currentContent, setCurrentContent] = useState(\"\")\n\n  return (\n    <Wrapper>\n      <Files setCurrentContent={setCurrentContent} />\n      <PreviewContent currentContent={currentContent} />\n    </Wrapper>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: Roboto, sans-serif;\n    font-size: 16px;\n  }\n\n  ul {\n    list-style: none;\n    padding-left: 10px;\n  }\n`\n","import styled from \"styled-components\"\n\nexport const Wrapper = styled.form`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  padding-top: 100px;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n`\n","import React, { FC } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { useForm, Controller } from \"react-hook-form\"\n\nimport { getFileContentById, getAllFilesSelector } from \"../../store/selectors\"\nimport { Wrapper, Row } from \"./styles\"\nimport { changeFiles } from \"../../store/actions\"\n\ntype Props = {\n  id: string\n}\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    display: \"block\",\n    marginBottom: 10\n  },\n  cancel: {\n    textDecoration: \"none\"\n  }\n}));\n\nexport const FileContent: FC<Props> = ({ id }) => {\n  const fileInfo = useSelector(getFileContentById(id))\n  const allFiles = useSelector(getAllFilesSelector)\n  const { control, handleSubmit, errors } = useForm()\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const classes = useStyles()\n\n  const onSubmit = (values: any) => {\n    const newFiles = allFiles?.map(file => {\n      if (file.id === id) {\n        return {\n          ...file,\n          ...values\n        }\n      }\n\n      return file\n    })\n   \n    if (newFiles) {\n      dispatch(changeFiles(newFiles))\n      history.push('/')\n    }\n  }\n\n  return fileInfo ? (\n    <Wrapper onSubmit={(handleSubmit(onSubmit))}>\n    <Typography variant=\"h2\" component=\"h2\" gutterBottom>File Edit</Typography>\n     <Controller \n      error={errors.title}\n      id=\"standard-error-helper-text\"\n      helperText=\"required field\"\n      rules={{ required: true }} \n      defaultValue={fileInfo.title} \n      as={TextField} \n      control={control} \n      className={classes.input} \n      label=\"title\" \n      name=\"title\" \n    />\n     <Controller \n      error={errors.size}\n      id=\"standard-error-helper-text\"\n      helperText=\"required field\"\n      rules={{ required: true }} \n      defaultValue={fileInfo.size} \n      as={TextField} \n      control={control} \n      className={classes.input} \n      label=\"size\" \n      name=\"size\" \n    />\n     <Controller \n      error={errors.extension}\n      id=\"standard-error-helper-text\"\n      helperText=\"required field\"\n      rules={{ required: true }} \n      defaultValue={fileInfo.extension} \n      as={TextField} \n      control={control} \n      className={classes.input} \n      label=\"extension\" \n      name=\"extension\"\n    />\n     <Controller \n      error={errors.extension}\n      id=\"standard-error-helper-text\"\n      helperText=\"required field\"\n      rules={{ required: true }} \n      defaultValue={fileInfo.content} \n      as={TextField} \n      control={control} \n      multiline \n      className={classes.input} \n      label=\"content\" \n      name=\"content\" \n    />\n     <Row>\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">Save</Button>\n      <Link className={classes.cancel} to=\"/\"><Button variant=\"contained\">Cancel</Button></Link>\n     </Row>\n    </Wrapper>\n  ) : null\n}\n","import { File } from './../../services/api/types'\nimport { actionTypes, changeFilesAction } from './types'\n\nexport const changeFiles = (files: File[]): changeFilesAction => {\n  return ({ type: actionTypes.CHANGE_FILE, payload: {\n    files\n  } })\n}\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nimport { FileContent } from \"../../components/file-content\"\n\nexport const FilePage = () => {\n  const params: { id: string } = useParams()\n  return <FileContent id={params.id} />\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { Route } from \"react-router-dom\"\n\nimport { getFiles } from './store/actions/get-files'\nimport { MainPage } from \"./pages/main\"\nimport { GlobalStyle } from \"./styles\"\nimport { FilePage } from './pages/file'\n\nexport const App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getFiles())\n  })\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Route path=\"/\" exact>\n        <MainPage />\n      </Route>\n      <Route path=\"/:id\" children={<FilePage />} />\n    </div>\n  );\n}\n","import { Action } from \"redux\"\nimport { ThunkAction } from 'redux-thunk'\n\nimport { actionTypes } from './types'\nimport { RootState } from './../types'\nimport { apiFiles } from \"../../services/api\"\n\nexport const getFiles = (): ThunkAction<void, RootState, unknown, Action<string>> => async (dispatch) => {\n  dispatch({ type: actionTypes.GET_FILES })\n\n  try {\n    const files = await apiFiles.getFiles()\n\n    dispatch({ type: actionTypes.GET_FILES_SUCCESS, payload: { files } })\n\n  } catch (error) {\n    dispatch({ type: actionTypes.GET_FILES_FAIL })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport { store } from \"./store\"\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}